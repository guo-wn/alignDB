[common-align-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM indel
    INNER JOIN isw ON
      isw.indel_id = indel.indel_id
    INNER JOIN align ON
      align.align_id = indel.align_id
  GROUP BY
    isw.isw_distance
bind: []
from: []
group:
  column: isw.isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.indel_id = indel.indel_id
    table: isw
    type: inner
  - condition: align.align_id = indel.align_id
    table: align
    type: inner
  table: indel
replace: {}
select:
- isw.isw_distance
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
  isw.isw_distance: distance
select_map_reverse:
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
  distance: isw.isw_distance
where: []
where_values: {}

[common-d1_comb_coding-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(isw.isw_distance) AVG_distance,
    AVG(isw.isw_pi) AVG_pi,
    STD(isw.isw_pi) STD_pi,
    AVG(isw.isw_average_gc) AVG_gc,
    STD(isw.isw_average_gc) STD_gc,
    AVG(isw.isw_cv) AVG_cv,
    STD(isw.isw_cv) STD_cv,
    COUNT(*) COUNT
  FROM isw
  WHERE (isw.isw_coding >= ?)
    AND (isw.isw_coding <= ?)
bind:
- '1'
- '1'
from:
- isw
having: []
indent: '  '
joins: []
replace: {}
select:
- AVG(isw.isw_distance)
- AVG(isw.isw_pi)
- STD(isw.isw_pi)
- AVG(isw.isw_average_gc)
- STD(isw.isw_average_gc)
- AVG(isw.isw_cv)
- STD(isw.isw_cv)
- COUNT(*)
select_map:
  AVG(isw.isw_average_gc): AVG_gc
  AVG(isw.isw_cv): AVG_cv
  AVG(isw.isw_distance): AVG_distance
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_average_gc): STD_gc
  STD(isw.isw_cv): STD_cv
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_cv: AVG(isw.isw_cv)
  AVG_distance: AVG(isw.isw_distance)
  AVG_gc: AVG(isw.isw_average_gc)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_cv: STD(isw.isw_cv)
  STD_gc: STD(isw.isw_average_gc)
  STD_pi: STD(isw.isw_pi)
where:
- (isw.isw_coding >= ?)
- (isw.isw_coding <= ?)
where_values:
  isw.isw_coding:
    op: <=
    value: '1'

[common-d1_comb_pi_gc_cv-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(isw.isw_distance) AVG_distance,
    AVG(isw.isw_pi) AVG_pi,
    STD(isw.isw_pi) STD_pi,
    AVG(isw.isw_average_gc) AVG_gc,
    STD(isw.isw_average_gc) STD_gc,
    AVG(isw.isw_cv) AVG_cv,
    STD(isw.isw_cv) STD_cv,
    COUNT(*) COUNT
  FROM isw
bind: []
from:
- isw
having: []
indent: '  '
joins: []
replace: {}
select:
- AVG(isw.isw_distance)
- AVG(isw.isw_pi)
- STD(isw.isw_pi)
- AVG(isw.isw_average_gc)
- STD(isw.isw_average_gc)
- AVG(isw.isw_cv)
- STD(isw.isw_cv)
- COUNT(*)
select_map:
  AVG(isw.isw_average_gc): AVG_gc
  AVG(isw.isw_cv): AVG_cv
  AVG(isw.isw_distance): AVG_distance
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_average_gc): STD_gc
  STD(isw.isw_cv): STD_cv
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_cv: AVG(isw.isw_cv)
  AVG_distance: AVG(isw.isw_distance)
  AVG_gc: AVG(isw.isw_average_gc)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_cv: STD(isw.isw_cv)
  STD_gc: STD(isw.isw_average_gc)
  STD_pi: STD(isw.isw_pi)
where: []
where_values: {}

[common-d1_comb_slippage-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(isw.isw_distance) AVG_distance,
    AVG(isw.isw_pi) AVG_pi,
    STD(isw.isw_pi) STD_pi,
    AVG(isw.isw_average_gc) AVG_gc,
    STD(isw.isw_average_gc) STD_gc,
    AVG(isw.isw_cv) AVG_cv,
    STD(isw.isw_cv) STD_cv,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
  WHERE (indel.indel_slippage >= ?)
    AND (indel.indel_slippage <= ?)
bind:
- '1'
- '1'
from: []
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  table: isw
replace: {}
select:
- AVG(isw.isw_distance)
- AVG(isw.isw_pi)
- STD(isw.isw_pi)
- AVG(isw.isw_average_gc)
- STD(isw.isw_average_gc)
- AVG(isw.isw_cv)
- STD(isw.isw_cv)
- COUNT(*)
select_map:
  AVG(isw.isw_average_gc): AVG_gc
  AVG(isw.isw_cv): AVG_cv
  AVG(isw.isw_distance): AVG_distance
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_average_gc): STD_gc
  STD(isw.isw_cv): STD_cv
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_cv: AVG(isw.isw_cv)
  AVG_distance: AVG(isw.isw_distance)
  AVG_gc: AVG(isw.isw_average_gc)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_cv: STD(isw.isw_cv)
  STD_gc: STD(isw.isw_average_gc)
  STD_pi: STD(isw.isw_pi)
where:
- (indel.indel_slippage >= ?)
- (indel.indel_slippage <= ?)
where_values:
  indel.indel_slippage:
    op: <=
    value: '1'

[common-d1_combine-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    COUNT(*) COUNT,
    SUM(isw_length) SUM_length
  FROM isw
  GROUP BY
    isw.isw_distance
bind: []
from:
- isw
group:
  column: isw.isw_distance
having: []
indent: '  '
joins: []
replace: {}
select:
- isw.isw_distance
- COUNT(*)
- SUM(isw_length)
select_map:
  COUNT(*): COUNT
  SUM(isw_length): SUM_length
  isw.isw_distance: distance
select_map_reverse:
  COUNT: COUNT(*)
  SUM_length: SUM(isw_length)
  distance: isw.isw_distance
where: []
where_values: {}

[common-d1_make_combine_coding-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    COUNT(*) COUNT
  FROM isw
  WHERE (isw.isw_coding >= ?)
    AND (isw.isw_coding <= ?)
  GROUP BY
    isw.isw_distance
bind:
- '1'
- '1'
from:
- isw
group:
  column: isw.isw_distance
having: []
indent: '  '
joins: []
replace: {}
select:
- isw.isw_distance
- COUNT(*)
select_map:
  COUNT(*): COUNT
  isw.isw_distance: distance
select_map_reverse:
  COUNT: COUNT(*)
  distance: isw.isw_distance
where:
- (isw.isw_coding >= ?)
- (isw.isw_coding <= ?)
where_values:
  isw.isw_coding:
    op: <=
    value: '1'

[common-d1_make_combine_slippage-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
  WHERE (indel.indel_slippage >= ?)
    AND (indel.indel_slippage <= ?)
  GROUP BY
    isw.isw_distance
bind:
- '1'
- '1'
from: []
group:
  column: isw.isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  table: isw
replace: {}
select:
- isw.isw_distance
- COUNT(*)
select_map:
  COUNT(*): COUNT
  isw.isw_distance: distance
select_map_reverse:
  COUNT: COUNT(*)
  distance: isw.isw_distance
where:
- (indel.indel_slippage >= ?)
- (indel.indel_slippage <= ?)
where_values:
  indel.indel_slippage:
    op: <=
    value: '1'

[common-d1_pi_avg-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(isw.isw_distance) AVG_distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM isw
bind: []
from:
- isw
having: []
indent: '  '
joins: []
replace: {}
select:
- AVG(isw.isw_distance)
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_distance): AVG_distance
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_distance: AVG(isw.isw_distance)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
where: []
where_values: {}

[common-d1_pi_gc_cv-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    AVG(isw.isw_pi) AVG_pi,
    STD(isw.isw_pi) STD_pi,
    AVG(isw.isw_average_gc) AVG_gc,
    STD(isw.isw_average_gc) STD_gc,
    AVG(isw.isw_cv) AVG_cv,
    STD(isw.isw_cv) STD_cv,
    COUNT(*) COUNT
  FROM isw
  GROUP BY
    isw.isw_distance
bind: []
from:
- isw
group:
  column: isw.isw_distance
having: []
indent: '  '
joins: []
replace: {}
select:
- isw.isw_distance
- AVG(isw.isw_pi)
- STD(isw.isw_pi)
- AVG(isw.isw_average_gc)
- STD(isw.isw_average_gc)
- AVG(isw.isw_cv)
- STD(isw.isw_cv)
- COUNT(*)
select_map:
  AVG(isw.isw_average_gc): AVG_gc
  AVG(isw.isw_cv): AVG_cv
  AVG(isw.isw_pi): AVG_pi
  COUNT(*): COUNT
  STD(isw.isw_average_gc): STD_gc
  STD(isw.isw_cv): STD_cv
  STD(isw.isw_pi): STD_pi
  isw.isw_distance: distance
select_map_reverse:
  AVG_cv: AVG(isw.isw_cv)
  AVG_gc: AVG(isw.isw_average_gc)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_cv: STD(isw.isw_cv)
  STD_gc: STD(isw.isw_average_gc)
  STD_pi: STD(isw.isw_pi)
  distance: isw.isw_distance
where: []
where_values: {}

[common-dd_group-4]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    CONCAT(isw_type, isw_distance) isw_type_distance,
    AVG(isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw_pi) STD_pi
  FROM isw
  WHERE (isw_type = ?)
    AND (isw_density >= ?)
    AND (isw_density <= ?)
    AND (isw_distance <= (? + 1) / 2)
  GROUP BY
    CONCAT(isw_type, isw_distance)
  ORDER BY
    isw_distance
bind:
- L
- '1'
- '2'
from:
- isw
group:
  column: CONCAT(isw_type, isw_distance)
having: []
indent: '  '
joins: []
order:
  column: isw_distance
replace: {}
select:
- CONCAT(isw_type, isw_distance)
- AVG(isw_pi)
- COUNT(*)
- STD(isw_pi)
select_map:
  AVG(isw_pi): AVG_pi
  CONCAT(isw_type, isw_distance): isw_type_distance
  COUNT(*): COUNT
  STD(isw_pi): STD_pi
select_map_reverse:
  AVG_pi: AVG(isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw_pi)
  isw_type_distance: CONCAT(isw_type, isw_distance)
where:
- (isw_type = ?)
- (isw_density >= ?)
- (isw_density <= ?)
- (isw_distance <= (? + 1) / 2)
where_values:
  isw_density:
    op: <=
    value: '2'
  isw_distance: !!perl/ref
    =: <= (? + 1) / 2
  isw_type: L

[common-indel_feature_l-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    CONCAT(isw_type, isw_distance) isw_type_distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM indel
    INNER JOIN isw ON
      indel.indel_id = isw.prev_indel_id
  WHERE (isw.isw_density > 9)
    AND (isw.isw_distance <= 5)
    AND (isw.isw_type = 'L')
  GROUP BY
    CONCAT(isw.isw_type, isw.isw_distance)
bind: []
from: []
group:
  column: CONCAT(isw.isw_type, isw.isw_distance)
having: []
indent: '  '
joins:
- joins:
  - condition: indel.indel_id = isw.prev_indel_id
    table: isw
    type: inner
  table: indel
replace: {}
select:
- CONCAT(isw_type, isw_distance)
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_pi): AVG_pi
  CONCAT(isw_type, isw_distance): isw_type_distance
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
  isw_type_distance: CONCAT(isw_type, isw_distance)
where:
- (isw.isw_density > 9)
- (isw.isw_distance <= 5)
- (isw.isw_type = 'L')
where_values:
  isw.isw_density: !!perl/ref
    =: '> 9'
  isw.isw_distance: !!perl/ref
    =: <= 5
  isw.isw_type: !!perl/ref
    =: = 'L'

[common-indel_feature_r-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    CONCAT(isw_type, isw_distance) isw_type_distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM indel
    INNER JOIN isw ON
      indel.indel_id = isw.indel_id
  WHERE (isw.isw_density > 9)
    AND (isw.isw_distance <= 5)
    AND (isw.isw_type = 'R')
  GROUP BY
    CONCAT(isw.isw_type, isw.isw_distance) DESC
bind: []
from: []
group:
  column: CONCAT(isw.isw_type, isw.isw_distance)
  desc: DESC
having: []
indent: '  '
joins:
- joins:
  - condition: indel.indel_id = isw.indel_id
    table: isw
    type: inner
  table: indel
replace: {}
select:
- CONCAT(isw_type, isw_distance)
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_pi): AVG_pi
  CONCAT(isw_type, isw_distance): isw_type_distance
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
  isw_type_distance: CONCAT(isw_type, isw_distance)
where:
- (isw.isw_density > 9)
- (isw.isw_distance <= 5)
- (isw.isw_type = 'R')
where_values:
  isw.isw_density: !!perl/ref
    =: '> 9'
  isw.isw_distance: !!perl/ref
    =: <= 5
  isw.isw_type: !!perl/ref
    =: = 'R'

[common-indel_length-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    indel_length,
    COUNT(*) indel_number,
    AVG(indel_gc) AVG_indel_gc,
    SUM(indel_length) indel_sum
  FROM indel
  GROUP BY
    indel_length
bind: []
from:
- indel
group:
  column: indel_length
having: []
indent: '  '
joins: []
replace: {}
select:
- indel_length
- COUNT(*)
- AVG(indel_gc)
- SUM(indel_length)
select_map:
  AVG(indel_gc): AVG_indel_gc
  COUNT(*): indel_number
  SUM(indel_length): indel_sum
  indel_length: indel_length
select_map_reverse:
  AVG_indel_gc: AVG(indel_gc)
  indel_length: indel_length
  indel_number: COUNT(*)
  indel_sum: SUM(indel_length)
where: []
where_values: {}

[common-indel_size_l-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    CONCAT(isw_type, isw_distance) isw_type_distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM indel
    INNER JOIN isw ON
      indel.indel_id = isw.prev_indel_id
  WHERE (isw.isw_density > 9)
    AND (isw.isw_distance <= 5)
    AND (isw.isw_type = 'L')
  GROUP BY
    CONCAT(isw.isw_type, isw.isw_distance)
bind: []
from: []
group:
  column: CONCAT(isw.isw_type, isw.isw_distance)
having: []
indent: '  '
joins:
- joins:
  - condition: indel.indel_id = isw.prev_indel_id
    table: isw
    type: inner
  table: indel
replace: {}
select:
- CONCAT(isw_type, isw_distance)
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_pi): AVG_pi
  CONCAT(isw_type, isw_distance): isw_type_distance
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
  isw_type_distance: CONCAT(isw_type, isw_distance)
where:
- (isw.isw_density > 9)
- (isw.isw_distance <= 5)
- (isw.isw_type = 'L')
where_values:
  isw.isw_density: !!perl/ref
    =: '> 9'
  isw.isw_distance: !!perl/ref
    =: <= 5
  isw.isw_type: !!perl/ref
    =: = 'L'

[common-indel_size_r-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    CONCAT(isw_type, isw_distance) isw_type_distance,
    AVG(isw.isw_pi) AVG_pi,
    COUNT(*) COUNT,
    STD(isw.isw_pi) STD_pi
  FROM indel
    INNER JOIN isw ON
      indel.indel_id = isw.indel_id
  WHERE (isw.isw_density > 9)
    AND (isw.isw_distance <= 5)
    AND (isw.isw_type = 'R')
  GROUP BY
    CONCAT(isw.isw_type, isw.isw_distance) DESC
bind: []
from: []
group:
  column: CONCAT(isw.isw_type, isw.isw_distance)
  desc: DESC
having: []
indent: '  '
joins:
- joins:
  - condition: indel.indel_id = isw.indel_id
    table: isw
    type: inner
  table: indel
replace: {}
select:
- CONCAT(isw_type, isw_distance)
- AVG(isw.isw_pi)
- COUNT(*)
- STD(isw.isw_pi)
select_map:
  AVG(isw.isw_pi): AVG_pi
  CONCAT(isw_type, isw_distance): isw_type_distance
  COUNT(*): COUNT
  STD(isw.isw_pi): STD_pi
select_map_reverse:
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  STD_pi: STD(isw.isw_pi)
  isw_type_distance: CONCAT(isw_type, isw_distance)
where:
- (isw.isw_density > 9)
- (isw.isw_distance <= 5)
- (isw.isw_type = 'R')
where_values:
  isw.isw_density: !!perl/ref
    =: '> 9'
  isw.isw_distance: !!perl/ref
    =: <= 5
  isw.isw_type: !!perl/ref
    =: = 'R'

[dnds-d1_comb_dn_ds-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(isw.isw_distance) AVG_distance,
    AVG(isw.isw_pi) AVG_pi,
    AVG(isw.isw_syn) AVG_d_syn,
    AVG(isw.isw_nsy) AVG_d_nsy,
    AVG(isw.isw_stop) AVG_d_stop,
    COUNT(*) COUNT,
    AVG(isw.isw_nsy) / AVG(isw.isw_syn) `dn/ds`
  FROM isw
bind: []
from:
- isw
having: []
indent: '  '
joins: []
replace: {}
select:
- AVG(isw.isw_distance)
- AVG(isw.isw_pi)
- AVG(isw.isw_syn)
- AVG(isw.isw_nsy)
- AVG(isw.isw_stop)
- COUNT(*)
- AVG(isw.isw_nsy) / AVG(isw.isw_syn)
select_map:
  AVG(isw.isw_distance): AVG_distance
  AVG(isw.isw_nsy): AVG_d_nsy
  AVG(isw.isw_nsy) / AVG(isw.isw_syn): '`dn/ds`'
  AVG(isw.isw_pi): AVG_pi
  AVG(isw.isw_stop): AVG_d_stop
  AVG(isw.isw_syn): AVG_d_syn
  COUNT(*): COUNT
select_map_reverse:
  AVG_d_nsy: AVG(isw.isw_nsy)
  AVG_d_stop: AVG(isw.isw_stop)
  AVG_d_syn: AVG(isw.isw_syn)
  AVG_distance: AVG(isw.isw_distance)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  '`dn/ds`': AVG(isw.isw_nsy) / AVG(isw.isw_syn)
where: []
where_values: {}

[dnds-d1_dn_ds-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance,
    AVG(isw.isw_pi) AVG_pi,
    AVG(isw.isw_syn) AVG_d_syn,
    AVG(isw.isw_nsy) AVG_d_nsy,
    AVG(isw.isw_stop) AVG_d_stop,
    COUNT(*) COUNT,
    AVG(isw.isw_nsy) / AVG(isw.isw_syn) `dn/ds`
  FROM isw
  GROUP BY
    isw_distance
bind: []
from:
- isw
group:
  column: isw_distance
having: []
indent: '  '
joins: []
replace: {}
select:
- isw.isw_distance
- AVG(isw.isw_pi)
- AVG(isw.isw_syn)
- AVG(isw.isw_nsy)
- AVG(isw.isw_stop)
- COUNT(*)
- AVG(isw.isw_nsy) / AVG(isw.isw_syn)
select_map:
  AVG(isw.isw_nsy): AVG_d_nsy
  AVG(isw.isw_nsy) / AVG(isw.isw_syn): '`dn/ds`'
  AVG(isw.isw_pi): AVG_pi
  AVG(isw.isw_stop): AVG_d_stop
  AVG(isw.isw_syn): AVG_d_syn
  COUNT(*): COUNT
  isw.isw_distance: isw_distance
select_map_reverse:
  AVG_d_nsy: AVG(isw.isw_nsy)
  AVG_d_stop: AVG(isw.isw_stop)
  AVG_d_syn: AVG(isw.isw_syn)
  AVG_pi: AVG(isw.isw_pi)
  COUNT: COUNT(*)
  '`dn/ds`': AVG(isw.isw_nsy) / AVG(isw.isw_syn)
  isw_distance: isw.isw_distance
where: []
where_values: {}

[gc-wave_comb_pi_indel_cv-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    AVG(gsw_distance),
    AVG(window_pi) AVG_pi,
    STD(window_pi) STD_pi,
    AVG(window_indel / window_length * 100) AVG_indel,
    STD(window_indel / window_length * 100) STD_indel,
    AVG(gsw_cv) AVG_cv,
    STD(gsw_cv) STD_cv,
    COUNT(*) COUNT
  FROM gsw
    INNER JOIN window ON
      gsw.window_id = window.window_id
bind: []
from: []
having: []
indent: '  '
joins:
- joins:
  - condition: gsw.window_id = window.window_id
    table: window
    type: inner
  table: gsw
replace: {}
select:
- AVG(gsw_distance)
- AVG(window_pi)
- STD(window_pi)
- AVG(window_indel / window_length * 100)
- STD(window_indel / window_length * 100)
- AVG(gsw_cv)
- STD(gsw_cv)
- COUNT(*)
select_map:
  AVG(gsw_cv): AVG_cv
  AVG(gsw_distance): AVG(gsw_distance)
  AVG(window_indel / window_length * 100): AVG_indel
  AVG(window_pi): AVG_pi
  COUNT(*): COUNT
  STD(gsw_cv): STD_cv
  STD(window_indel / window_length * 100): STD_indel
  STD(window_pi): STD_pi
select_map_reverse:
  AVG(gsw_distance): AVG(gsw_distance)
  AVG_cv: AVG(gsw_cv)
  AVG_indel: AVG(window_indel / window_length * 100)
  AVG_pi: AVG(window_pi)
  COUNT: COUNT(*)
  STD_cv: STD(gsw_cv)
  STD_indel: STD(window_indel / window_length * 100)
  STD_pi: STD(window_pi)
where: []
where_values: {}

[gc-wave_combine-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    gsw_distance,
    COUNT(*)
  FROM gsw
  GROUP BY
    gsw_distance
bind: []
from:
- gsw
group:
  column: gsw_distance
having: []
indent: '  '
joins: []
replace: {}
select:
- gsw_distance
- COUNT(*)
select_map:
  COUNT(*): COUNT(*)
  gsw_distance: gsw_distance
select_map_reverse:
  COUNT(*): COUNT(*)
  gsw_distance: gsw_distance
where: []
where_values: {}

[ld-indel_ld-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    AVG(snp.snp_r) AVG_r,
    AVG(POWER(snp.snp_r, 2)) AVG_r2,
    AVG(snp.snp_dprime) AVG_Dprime,
    AVG(ABS(snp.snp_dprime)) AVG_Dprime_abs,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
    INNER JOIN snp ON
      isw.isw_id = snp.isw_id
  WHERE (indel.indel_occured != 'unknown')
    AND (snp.snp_occured != 'unknown')
  GROUP BY
    isw.isw_distance
bind: []
from: []
group:
  column: isw.isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  - condition: isw.isw_id = snp.isw_id
    table: snp
    type: inner
  table: isw
replace: {}
select:
- isw.isw_distance
- AVG(snp.snp_r)
- AVG(POWER(snp.snp_r, 2))
- AVG(snp.snp_dprime)
- AVG(ABS(snp.snp_dprime))
- COUNT(*)
select_map:
  AVG(ABS(snp.snp_dprime)): AVG_Dprime_abs
  AVG(POWER(snp.snp_r, 2)): AVG_r2
  AVG(snp.snp_dprime): AVG_Dprime
  AVG(snp.snp_r): AVG_r
  COUNT(*): COUNT
  isw.isw_distance: distance
select_map_reverse:
  AVG_Dprime: AVG(snp.snp_dprime)
  AVG_Dprime_abs: AVG(ABS(snp.snp_dprime))
  AVG_r: AVG(snp.snp_r)
  AVG_r2: AVG(POWER(snp.snp_r, 2))
  COUNT: COUNT(*)
  distance: isw.isw_distance
where:
- (indel.indel_occured != 'unknown')
- (snp.snp_occured != 'unknown')
where_values:
  indel.indel_occured: !!perl/ref
    =: '!= ''unknown'''
  snp.snp_occured: !!perl/ref
    =: '!= ''unknown'''

[ld-snps_ld-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw.isw_distance distance,
    AVG(POWER(snp.snp_r, 2)) AVG_r2,
    AVG(snp.snp_r2_s) AVG_r2_s,
    AVG(ABS(snp.snp_dprime)) AVG_Dprime_abs,
    AVG(snp.snp_dprime_abs_s) AVG_Dprime_abs_s,
    AVG(snp.snp_r2_i) AVG_r2_i,
    AVG(snp.snp_r2_ni) AVG_r2_ni,
    AVG(snp.snp_dprime_abs_i) AVG_Dprime_abs_i,
    AVG(snp.snp_dprime_abs_ni) AVG_Dprime_abs_ni,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
    INNER JOIN snp ON
      isw.isw_id = snp.isw_id
  WHERE (indel.indel_occured != 'unknown')
    AND (snp.snp_occured != 'unknown')
  GROUP BY
    isw.isw_distance
bind: []
from: []
group:
  column: isw.isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  - condition: isw.isw_id = snp.isw_id
    table: snp
    type: inner
  table: isw
replace: {}
select:
- isw.isw_distance
- AVG(POWER(snp.snp_r, 2))
- AVG(snp.snp_r2_s)
- AVG(ABS(snp.snp_dprime))
- AVG(snp.snp_dprime_abs_s)
- AVG(snp.snp_r2_i)
- AVG(snp.snp_r2_ni)
- AVG(snp.snp_dprime_abs_i)
- AVG(snp.snp_dprime_abs_ni)
- COUNT(*)
select_map:
  AVG(ABS(snp.snp_dprime)): AVG_Dprime_abs
  AVG(POWER(snp.snp_r, 2)): AVG_r2
  AVG(snp.snp_dprime_abs_i): AVG_Dprime_abs_i
  AVG(snp.snp_dprime_abs_ni): AVG_Dprime_abs_ni
  AVG(snp.snp_dprime_abs_s): AVG_Dprime_abs_s
  AVG(snp.snp_r2_i): AVG_r2_i
  AVG(snp.snp_r2_ni): AVG_r2_ni
  AVG(snp.snp_r2_s): AVG_r2_s
  COUNT(*): COUNT
  isw.isw_distance: distance
select_map_reverse:
  AVG_Dprime_abs: AVG(ABS(snp.snp_dprime))
  AVG_Dprime_abs_i: AVG(snp.snp_dprime_abs_i)
  AVG_Dprime_abs_ni: AVG(snp.snp_dprime_abs_ni)
  AVG_Dprime_abs_s: AVG(snp.snp_dprime_abs_s)
  AVG_r2: AVG(POWER(snp.snp_r, 2))
  AVG_r2_i: AVG(snp.snp_r2_i)
  AVG_r2_ni: AVG(snp.snp_r2_ni)
  AVG_r2_s: AVG(snp.snp_r2_s)
  COUNT: COUNT(*)
  distance: isw.isw_distance
where:
- (indel.indel_occured != 'unknown')
- (snp.snp_occured != 'unknown')
where_values:
  indel.indel_occured: !!perl/ref
    =: '!= ''unknown'''
  snp.snp_occured: !!perl/ref
    =: '!= ''unknown'''

[multi-distance-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw_distance distance,
    AVG(isw_pi) AVG_D,
    AVG(isw_d_indel) AVG_Di,
    AVG(isw_d_noindel) AVG_Dn,
    AVG(isw_d_bii)/2 `AVG_Dbii/2`,
    AVG(isw_d_bnn)/2 `AVG_Dbnn/2`,
    AVG(isw_d_complex) AVG_Dc,
    AVG(isw_d_indel) / AVG(isw_d_noindel) `Di/Dn`,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
  WHERE (indel.indel_slippage = 0)
  GROUP BY
    isw_distance
bind: []
from: []
group:
  column: isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  table: isw
replace: {}
select:
- isw_distance
- AVG(isw_pi)
- AVG(isw_d_indel)
- AVG(isw_d_noindel)
- AVG(isw_d_bii)/2
- AVG(isw_d_bnn)/2
- AVG(isw_d_complex)
- AVG(isw_d_indel) / AVG(isw_d_noindel)
- COUNT(*)
select_map:
  AVG(isw_d_bii)/2: '`AVG_Dbii/2`'
  AVG(isw_d_bnn)/2: '`AVG_Dbnn/2`'
  AVG(isw_d_complex): AVG_Dc
  AVG(isw_d_indel): AVG_Di
  AVG(isw_d_indel) / AVG(isw_d_noindel): '`Di/Dn`'
  AVG(isw_d_noindel): AVG_Dn
  AVG(isw_pi): AVG_D
  COUNT(*): COUNT
  isw_distance: distance
select_map_reverse:
  AVG_D: AVG(isw_pi)
  AVG_Dc: AVG(isw_d_complex)
  AVG_Di: AVG(isw_d_indel)
  AVG_Dn: AVG(isw_d_noindel)
  COUNT: COUNT(*)
  '`AVG_Dbii/2`': AVG(isw_d_bii)/2
  '`AVG_Dbnn/2`': AVG(isw_d_bnn)/2
  '`Di/Dn`': AVG(isw_d_indel) / AVG(isw_d_noindel)
  distance: isw_distance
where:
- (indel.indel_slippage = 0)
where_values:
  indel.indel_slippage: !!perl/ref
    =: = 0

[multi-distance2-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw_distance distance,
    AVG(isw_pi) AVG_D,
    AVG(isw_d_indel2) AVG_Di2,
    AVG(isw_d_noindel2) AVG_Dn2,
    AVG(isw_d_bii2)/2 `AVG_Dbii2/2`,
    AVG(isw_d_bnn2)/2 `AVG_Dbnn2/2`,
    AVG(isw_d_complex2) AVG_Dc2,
    AVG(isw_d_indel2) / AVG(isw_d_noindel2) `Di2/Dn2`,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
  WHERE (indel.indel_slippage = 0)
  GROUP BY
    isw_distance
bind: []
from: []
group:
  column: isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  table: isw
replace: {}
select:
- isw_distance
- AVG(isw_pi)
- AVG(isw_d_indel2)
- AVG(isw_d_noindel2)
- AVG(isw_d_bii2)/2
- AVG(isw_d_bnn2)/2
- AVG(isw_d_complex2)
- AVG(isw_d_indel2) / AVG(isw_d_noindel2)
- COUNT(*)
select_map:
  AVG(isw_d_bii2)/2: '`AVG_Dbii2/2`'
  AVG(isw_d_bnn2)/2: '`AVG_Dbnn2/2`'
  AVG(isw_d_complex2): AVG_Dc2
  AVG(isw_d_indel2): AVG_Di2
  AVG(isw_d_indel2) / AVG(isw_d_noindel2): '`Di2/Dn2`'
  AVG(isw_d_noindel2): AVG_Dn2
  AVG(isw_pi): AVG_D
  COUNT(*): COUNT
  isw_distance: distance
select_map_reverse:
  AVG_D: AVG(isw_pi)
  AVG_Dc2: AVG(isw_d_complex2)
  AVG_Di2: AVG(isw_d_indel2)
  AVG_Dn2: AVG(isw_d_noindel2)
  COUNT: COUNT(*)
  '`AVG_Dbii2/2`': AVG(isw_d_bii2)/2
  '`AVG_Dbnn2/2`': AVG(isw_d_bnn2)/2
  '`Di2/Dn2`': AVG(isw_d_indel2) / AVG(isw_d_noindel2)
  distance: isw_distance
where:
- (indel.indel_slippage = 0)
where_values:
  indel.indel_slippage: !!perl/ref
    =: = 0

[multi-distance3-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    isw_distance distance,
    AVG(isw_pi) AVG_D,
    AVG(isw_d_indel3) AVG_Di3,
    AVG(isw_d_noindel3) AVG_Dn3,
    AVG(isw_d_bii3)/2 `AVG_Dbii3/2`,
    AVG(isw_d_bnn3)/2 `AVG_Dbnn3/2`,
    AVG(isw_d_complex3) AVG_Dc3,
    AVG(isw_d_indel3) / AVG(isw_d_noindel3) `Di3/Dn3`,
    COUNT(*) COUNT
  FROM isw
    INNER JOIN indel ON
      isw.isw_indel_id = indel.indel_id
  WHERE (indel.indel_slippage = 0)
  GROUP BY
    isw_distance
bind: []
from: []
group:
  column: isw_distance
having: []
indent: '  '
joins:
- joins:
  - condition: isw.isw_indel_id = indel.indel_id
    table: indel
    type: inner
  table: isw
replace: {}
select:
- isw_distance
- AVG(isw_pi)
- AVG(isw_d_indel3)
- AVG(isw_d_noindel3)
- AVG(isw_d_bii3)/2
- AVG(isw_d_bnn3)/2
- AVG(isw_d_complex3)
- AVG(isw_d_indel3) / AVG(isw_d_noindel3)
- COUNT(*)
select_map:
  AVG(isw_d_bii3)/2: '`AVG_Dbii3/2`'
  AVG(isw_d_bnn3)/2: '`AVG_Dbnn3/2`'
  AVG(isw_d_complex3): AVG_Dc3
  AVG(isw_d_indel3): AVG_Di3
  AVG(isw_d_indel3) / AVG(isw_d_noindel3): '`Di3/Dn3`'
  AVG(isw_d_noindel3): AVG_Dn3
  AVG(isw_pi): AVG_D
  COUNT(*): COUNT
  isw_distance: distance
select_map_reverse:
  AVG_D: AVG(isw_pi)
  AVG_Dc3: AVG(isw_d_complex3)
  AVG_Di3: AVG(isw_d_indel3)
  AVG_Dn3: AVG(isw_d_noindel3)
  COUNT: COUNT(*)
  '`AVG_Dbii3/2`': AVG(isw_d_bii3)/2
  '`AVG_Dbnn3/2`': AVG(isw_d_bnn3)/2
  '`Di3/Dn3`': AVG(isw_d_indel3) / AVG(isw_d_noindel3)
  distance: isw_distance
where:
- (indel.indel_slippage = 0)
where_values:
  indel.indel_slippage: !!perl/ref
    =: = 0

[multi-indel_length-0]
---
__CLASS__: AlignDB::SQL-1.0.0
_sql: |
  SELECT
    indel_length,
    COUNT(*) indel_number,
    AVG(indel_gc) AVG_gc,
    SUM(indel_length) indel_sum
  FROM indel
  WHERE (indel.indel_slippage = 0)
  GROUP BY
    indel_length
bind: []
from:
- indel
group:
  column: indel_length
having: []
indent: '  '
joins: []
replace: {}
select:
- indel_length
- COUNT(*)
- AVG(indel_gc)
- SUM(indel_length)
select_map:
  AVG(indel_gc): AVG_gc
  COUNT(*): indel_number
  SUM(indel_length): indel_sum
  indel_length: indel_length
select_map_reverse:
  AVG_gc: AVG(indel_gc)
  indel_length: indel_length
  indel_number: COUNT(*)
  indel_sum: SUM(indel_length)
where:
- (indel.indel_slippage = 0)
where_values:
  indel.indel_slippage: !!perl/ref
    =: = 0

