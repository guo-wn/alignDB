# alignDBGUI.pl --
#
# UI generated by GUI Builder Build 219949 on 2006-09-23 22:34:39 from:
#    E:/wq/Scripts/alignDB/gui/alignDBGUI.ui
# This file is auto-generated.  Only the code within
#    '# BEGIN USER CODE'
#    '# END USER CODE'
# and code inside the callback subroutines will be round-tripped.
# The subroutine name 'ui' is reserved.
#

# Declare the package for this dialog
package alignDBGUI;

# Locate this script so we can load the ui module
use FindBin qw($RealBin); use lib $RealBin; use alignDBGUI_ui;

# BEGIN USER CODE
use strict;
use warnings;

use YAML qw(Dump Load DumpFile LoadFile);
use Config::Tiny;

use alignDBGUI_run;

our $version = "0.2.060724";
our ($about_dialog, $load_dialog);

sub userinit {
    my $Config = Config::Tiny->new();
    $Config = Config::Tiny->read("$FindBin::Bin/../alignDB.ini");

    # Database init values
    $server   = $Config->{database}->{server};
    $port     = $Config->{database}->{port};
    $username = $Config->{database}->{username};
    $password = $Config->{database}->{password};
    $db       = $Config->{database}->{db};

    # ensembl
    $ensembl_db = $Config->{database}->{ensembl};

    # target, query init values
    $target_taxon_id = $Config->{taxon}->{target_taxon_id};
    $target_name     = $Config->{taxon}->{target_name};
    $query_taxon_id  = $Config->{taxon}->{query_taxon_id};
    $query_name      = $Config->{taxon}->{query_name};

    # axt
    $axt_dir       = $Config->{taxon}->{axt_dir};
    $axt_threshold = $Config->{generate}->{axt_threshold};

    # generate option
    $realign        = $Config->{generate}->{realign};
    $insert_gc      = $Config->{generate}->{insert_gc};
    $insert_dG      = $Config->{generate}->{insert_dG};
    $insert_segment = $Config->{generate}->{insert_segment};
    
    $parallel = $Config->{generate}->{parallel};

    # feature
    $process_align  = $Config->{feature}->{align};
    $process_indel  = $Config->{feature}->{indel};
    $process_isw    = $Config->{feature}->{isw};
    $process_snp    = $Config->{feature}->{snp};
    $process_window = $Config->{feature}->{window};

    # stat parameter
    $run           = $Config->{stat}->{run};
    $sum_threshold = $Config->{stat}->{sum_threshold};

    # separate from the one of database section
    # default if undef
    $graph_ensembl_db = $Config->{graph}->{ensembl};
}
# END USER CODE

# BEGIN CALLBACK CODE
# ONLY EDIT CODE WITHIN THE SUB COMMANDS.

# _button_about_command --
#
# Callback to handle $_button_about widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_about_command {
    &about;
}

# _button_gen_alignDB_command --
#
# Callback to handle $_button_gen_alignDB widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_gen_alignDB_command {
    my $cmd =
        "perl $RealBin/../init/gen_alignDB.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password"
      . " -t=\"$target_taxon_id,$target_name\""
      . " -q=\"$query_taxon_id,$query_name\""
      . " -a=$axt_dir"
      . " -l=$axt_threshold"
      . " --insert_dG=$insert_dG"
      . " --parallel=$parallel";
    &exec_cmd($cmd);
}

# _button_gene_graph_file_command --
#
# Callback to handle $_button_gene_graph_file widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_gene_graph_file_command {
    my $cmd =
        "perl $RealBin/../stat/alignDB_graph.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password";
    if ($graph_ensembl_db) {
        $cmd .= " -e=$graph_ensembl_db";
    }
    if ($graph_file) {
        $cmd .= " -o=$graph_file";
    }
    &exec_cmd($cmd);
}

# _button_gene_stat_file_command --
#
# Callback to handle $_button_gene_stat_file widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_gene_stat_file_command {
    my $cmd =
        "perl $RealBin/../stat/stat_factory.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password"
      . " -r=\"$run\""
      . " -t=$sum_threshold";
    if ($stat_file) {
        $cmd .= " -o=$stat_file";
    }
    &exec_cmd($cmd);
}

# _button_init_alignDB_command --
#
# Callback to handle $_button_init_alignDB widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_init_alignDB_command {
    my $cmd =
        "perl $RealBin/../init/init_alignDB.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password";
    &exec_cmd($cmd);
}

# _button_load_query_command --
#
# Callback to handle $_button_load_query widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_load_query_command {
    &load(\$query_taxon_id, \$query_name);
}

# _button_load_target_command --
#
# Callback to handle $_button_load_target widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_load_target_command {
    &load(\$target_taxon_id, \$target_name);
}

# _button_open_axt_dir_command --
#
# Callback to handle $_button_open_axt_dir widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_open_axt_dir_command {
    my $dir = $top->chooseDirectory();    
    return unless defined($dir);
    $axt_dir = $dir;
}

# _button_update_feature_command --
#
# Callback to handle $_button_update_feature widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_update_feature_command {
    my $cmd =
        "perl $RealBin/../init/update_feature.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password"
      . " -e=$ensembl_db"
      . " --process_align=$process_align"
      . " --process_indel=$process_indel"
      . " --process_isw=$process_isw"
      . " --process_snp=$process_snp"
      . " --process_window=$process_window";
    &exec_cmd($cmd);
}

# _button_update_indel_slippage_command --
#
# Callback to handle $_button_update_indel_slippage widget option -command
#
# ARGS:
#    <NONE>
#
sub _button_update_indel_slippage_command {
    my $cmd =
        "perl $RealBin/../init/update_indel_slippage.pl"
      . " -s=$server"
      . " --port=$port"
      . " -d=$db"
      . " -u=$username"
      . " --password=$password";
    &exec_cmd($cmd);
}

# _checkbutton_insert_dG_command --
#
# Callback to handle $_checkbutton_insert_dG widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_insert_dG_command { }

# _checkbutton_insert_gc_command --
#
# Callback to handle $_checkbutton_insert_gc widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_insert_gc_command { }

# _checkbutton_insert_segment_command --
#
# Callback to handle $_checkbutton_insert_segment widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_insert_segment_command { }

# _checkbutton_process_align_command --
#
# Callback to handle $_checkbutton_process_align widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_process_align_command { }

# _checkbutton_process_indel_command --
#
# Callback to handle $_checkbutton_process_indel widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_process_indel_command { }

# _checkbutton_process_isw_command --
#
# Callback to handle $_checkbutton_process_isw widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_process_isw_command { }

# _checkbutton_process_snp_command --
#
# Callback to handle $_checkbutton_process_snp widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_process_snp_command { }

# _checkbutton_process_window_command --
#
# Callback to handle $_checkbutton_process_window widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_process_window_command { }

# _checkbutton_realign_command --
#
# Callback to handle $_checkbutton_realign widget option -command
#
# ARGS:
#    <NONE>
#
sub _checkbutton_realign_command { }

# _entry_axt_dir_invalidcommand --
#
# Callback to handle $_entry_axt_dir widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_dir_invalidcommand { }

# _entry_axt_dir_validatecommand --
#
# Callback to handle $_entry_axt_dir widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_dir_validatecommand { }

# _entry_axt_dir_xscrollcommand --
#
# Callback to handle $_entry_axt_dir widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_dir_xscrollcommand { }

# _entry_axt_threshold_invalidcommand --
#
# Callback to handle $_entry_axt_threshold widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_threshold_invalidcommand { }

# _entry_axt_threshold_validatecommand --
#
# Callback to handle $_entry_axt_threshold widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_threshold_validatecommand { }

# _entry_axt_threshold_xscrollcommand --
#
# Callback to handle $_entry_axt_threshold widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_axt_threshold_xscrollcommand { }

# _entry_db_name_invalidcommand --
#
# Callback to handle $_entry_db_name widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_db_name_invalidcommand { }

# _entry_db_name_validatecommand --
#
# Callback to handle $_entry_db_name widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_db_name_validatecommand { }

# _entry_db_name_xscrollcommand --
#
# Callback to handle $_entry_db_name widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_db_name_xscrollcommand { }

# _entry_ensembl_invalidcommand --
#
# Callback to handle $_entry_ensembl widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_ensembl_invalidcommand { }

# _entry_ensembl_validatecommand --
#
# Callback to handle $_entry_ensembl widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_ensembl_validatecommand { }

# _entry_ensembl_xscrollcommand --
#
# Callback to handle $_entry_ensembl widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_ensembl_xscrollcommand { }

# _entry_graph_ensembl_invalidcommand --
#
# Callback to handle $_entry_graph_ensembl widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_ensembl_invalidcommand { }

# _entry_graph_ensembl_validatecommand --
#
# Callback to handle $_entry_graph_ensembl widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_ensembl_validatecommand { }

# _entry_graph_ensembl_xscrollcommand --
#
# Callback to handle $_entry_graph_ensembl widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_ensembl_xscrollcommand { }

# _entry_graph_file_invalidcommand --
#
# Callback to handle $_entry_graph_file widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_file_invalidcommand { }

# _entry_graph_file_validatecommand --
#
# Callback to handle $_entry_graph_file widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_file_validatecommand { }

# _entry_graph_file_xscrollcommand --
#
# Callback to handle $_entry_graph_file widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_graph_file_xscrollcommand { }

# _entry_parallel_invalidcommand --
#
# Callback to handle $_entry_parallel widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_parallel_invalidcommand {}

# _entry_parallel_validatecommand --
#
# Callback to handle $_entry_parallel widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_parallel_validatecommand {}

# _entry_parallel_xscrollcommand --
#
# Callback to handle $_entry_parallel widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_parallel_xscrollcommand {}

# _entry_password_invalidcommand --
#
# Callback to handle $_entry_password widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_password_invalidcommand { }

# _entry_password_validatecommand --
#
# Callback to handle $_entry_password widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_password_validatecommand { }

# _entry_password_xscrollcommand --
#
# Callback to handle $_entry_password widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_password_xscrollcommand { }

# _entry_port_invalidcommand --
#
# Callback to handle $_entry_port widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_port_invalidcommand { }

# _entry_port_validatecommand --
#
# Callback to handle $_entry_port widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_port_validatecommand { }

# _entry_port_xscrollcommand --
#
# Callback to handle $_entry_port widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_port_xscrollcommand { }

# _entry_query_name_invalidcommand --
#
# Callback to handle $_entry_query_name widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_name_invalidcommand { }

# _entry_query_name_validatecommand --
#
# Callback to handle $_entry_query_name widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_name_validatecommand { }

# _entry_query_name_xscrollcommand --
#
# Callback to handle $_entry_query_name widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_name_xscrollcommand { }

# _entry_query_taxon_id_invalidcommand --
#
# Callback to handle $_entry_query_taxon_id widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_taxon_id_invalidcommand { }

# _entry_query_taxon_id_validatecommand --
#
# Callback to handle $_entry_query_taxon_id widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_taxon_id_validatecommand { }

# _entry_query_taxon_id_xscrollcommand --
#
# Callback to handle $_entry_query_taxon_id widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_query_taxon_id_xscrollcommand { }

# _entry_run_invalidcommand --
#
# Callback to handle $_entry_run widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_run_invalidcommand { }

# _entry_run_validatecommand --
#
# Callback to handle $_entry_run widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_run_validatecommand { }

# _entry_run_xscrollcommand --
#
# Callback to handle $_entry_run widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_run_xscrollcommand { }

# _entry_server_invalidcommand --
#
# Callback to handle $_entry_server widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_server_invalidcommand { }

# _entry_server_validatecommand --
#
# Callback to handle $_entry_server widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_server_validatecommand { }

# _entry_server_xscrollcommand --
#
# Callback to handle $_entry_server widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_server_xscrollcommand { }

# _entry_stat_file_invalidcommand --
#
# Callback to handle $_entry_stat_file widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_stat_file_invalidcommand { }

# _entry_stat_file_validatecommand --
#
# Callback to handle $_entry_stat_file widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_stat_file_validatecommand { }

# _entry_stat_file_xscrollcommand --
#
# Callback to handle $_entry_stat_file widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_stat_file_xscrollcommand { }

# _entry_sum_threshold_invalidcommand --
#
# Callback to handle $_entry_sum_threshold widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_sum_threshold_invalidcommand { }

# _entry_sum_threshold_validatecommand --
#
# Callback to handle $_entry_sum_threshold widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_sum_threshold_validatecommand { }

# _entry_sum_threshold_xscrollcommand --
#
# Callback to handle $_entry_sum_threshold widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_sum_threshold_xscrollcommand { }

# _entry_target_name_invalidcommand --
#
# Callback to handle $_entry_target_name widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_name_invalidcommand { }

# _entry_target_name_validatecommand --
#
# Callback to handle $_entry_target_name widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_name_validatecommand { }

# _entry_target_name_xscrollcommand --
#
# Callback to handle $_entry_target_name widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_name_xscrollcommand { }

# _entry_target_taxon_id_invalidcommand --
#
# Callback to handle $_entry_target_taxon_id widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_taxon_id_invalidcommand { }

# _entry_target_taxon_id_validatecommand --
#
# Callback to handle $_entry_target_taxon_id widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_taxon_id_validatecommand { }

# _entry_target_taxon_id_xscrollcommand --
#
# Callback to handle $_entry_target_taxon_id widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_target_taxon_id_xscrollcommand { }

# _entry_username_invalidcommand --
#
# Callback to handle $_entry_username widget option -invalidcommand
#
# ARGS:
#    <NONE>
#
sub _entry_username_invalidcommand { }

# _entry_username_validatecommand --
#
# Callback to handle $_entry_username widget option -validatecommand
#
# ARGS:
#    <NONE>
#
sub _entry_username_validatecommand { }

# _entry_username_xscrollcommand --
#
# Callback to handle $_entry_username widget option -xscrollcommand
#
# ARGS:
#    <NONE>
#
sub _entry_username_xscrollcommand { }

# _checkbutton_parallel_command --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _checkbutton_parallel_command {}

# _entry_18_invalidcommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_18_invalidcommand {}

# _entry_18_validatecommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_18_validatecommand {}

# _entry_18_xscrollcommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_18_xscrollcommand {}

# _entry_chart_file_invalidcommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_chart_file_invalidcommand { }

# _entry_chart_file_validatecommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_chart_file_validatecommand { }

# _entry_chart_file_xscrollcommand --
#
# Legacy command found in callback code. Add user comments inside body.
#
# ARGS:
#    <NONE>
#
sub _entry_chart_file_xscrollcommand { }

# END CALLBACK CODE

# Standalone Code Initialization - DO NOT EDIT
#
alignDBGUI::userinit() if defined &alignDBGUI::userinit;

our $top = MainWindow->new();
$top->title("alignDBGUI");
alignDBGUI::ui($top);

alignDBGUI::run() if defined &alignDBGUI::run;

Tk::MainLoop();

1;
